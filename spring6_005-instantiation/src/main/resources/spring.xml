<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--spring提供的实例化方式，第一种，:在spring配置文件中直接配置类全路径，Spring会自动调用该类的无参数构造方法来实例化Bean .-->
    <bean id="sb" class="com.lzc.bean.SpringBean"/>
    <!--spring提供的实例化方式，第二种通过简单工厂模式 你需要在Spring配置文件中告诉Spring框架，调用哪个类的哪个方法获取Bean.-->
    <!--factory-method属性指定的是I/类当中的静态方法。也就是告诉Spring框架，调用这个方法可以获取Bean。-->
    <bean id="starBean" class="com.lzc.bean.StarFactory" factory-method="get"></bean>

    <!--第三种，通过工厂方法模式，通过factory-bean属性+factory-method属性来共同完成-->
    <!--告诉Spring框架，调用哪个对象的哪个方法来获取Bean。-->
    <bean id="gunFactory" class="com.lzc.bean.GunFactory"/><!--GunFactory实际上就是一个factoryBean-->
    <!--以下的配置很关键 factory- bean属性告诉Spring调用哪个对象。factory-method告诉Spring调用该对象的哪个方法。-->
    <bean id="gun" factory-bean="gunFactory" factory-method="get"/>

    <!--Spring提供的实例化方式，第四种:通过FactoryBean接口来实现。-->
    <!--这种方式实际上就是第三种方式的简化。-->
    <!--由于你编写的类实现JFactoryBean接口,所以这个类是一个特殊的类， 不需要你再手动指定-->
    <!--通过一一个特殊的Bean: 工厂Bean。来返回- -个普通的Bean Person对象。 -->
    <!--通过FactoryBean这个工厂Bean.主要是想对普通Bean进行加工处理。-->
    <bean id="person" class="com.lzc.bean.PersonFactoryBean"/>
    <!--这种方式只能获取系统当前时间，这种时间不能作为生日。-->
    <bean id="nowTime" class="java.util.Date"/>
    <bean id="student" class="com.lzc.bean.Student">
        <!--把日期类型当作简单类型-->
<!--        <property name="birth" value="Mon Oct 10 14:30:26 CST 2022"></property>-->
        <property name="birth" ref="nowTime"/>
    </bean>




    <!--通过工厂Bean: DateFactoryBean 来返回普通Bean: java.util.Date-->
    <bean id="date" class="com.lzc.bean.DateFactoryBean">
        <constructor-arg index="0" value="1980-10-11"></constructor-arg>
    </bean>
    <bean id="studentBean" class="com.lzc.bean.Student">
        <property name="birth" ref="date"/>
    </bean>

</beans>